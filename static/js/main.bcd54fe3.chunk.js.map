{"version":3,"sources":["components/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRed","filter","App","useState","viewGoods","setViewGoods","hasLoadingError","setLoadingError","loadGoods","callback","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"kPAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBACEC,UAAU,OADZ,SAGGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,iBAIV,UAAQ,OACRG,MAAO,CAAEC,MAAOF,EAAKE,OANvB,SAQGF,EAAKG,MAJDH,EAAKI,UCZX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SACxDY,MAAM,EAAG,OAGHC,EAAS,WACpB,OAAOX,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMoB,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,aCThCgB,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2CF,oBAAS,GAApD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAb,EAAA,6DAChBW,GAAgB,GADA,kBAGME,IAHN,OAGR5B,EAHQ,OAKdwB,EAAaxB,GALC,gDAOd0B,GAAgB,GAPF,yDAAH,sDAWf,OACE,sBAAKzB,UAAU,8BAAf,UACE,oBAAIA,UAAU,qCAAd,mCAGA,sBAAKA,UAAU,GAAf,UACE,cAAC,SAAD,CACE4B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMH,EAAUnB,IAH3B,4BAQA,cAAC,SAAD,CACEqB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMH,EAAUd,IAH3B,gCAQA,cAAC,SAAD,CACEgB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMH,EAAUR,IAH3B,+BASF,qBAAKlB,UAAU,wBAAf,UACIwB,GAAmB,cAAC,EAAD,CAAWzB,MAAOuB,UCrD/CQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.bcd54fe3.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../types/Good';\nimport 'bulma/css/bulma.min.css';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul\n    className=\"list\"\n  >\n    {goods.map(good => (\n      <li\n        className=\"\n          list-1\n          type-1\"\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport { Button } from 'react-bulma-components';\nimport { Good } from './types/Good';\nimport { GoodsList } from './components/GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [viewGoods, setViewGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setLoadingError] = useState(false);\n\n  const loadGoods = async (callback: () => Promise<Good[]>) => {\n    setLoadingError(false);\n    try {\n      const goods = await callback();\n\n      setViewGoods(goods);\n    } catch {\n      setLoadingError(true);\n    }\n  };\n\n  return (\n    <div className=\"App container is-widescreen\">\n      <h1 className=\"box is-small title is-1 text title\">\n        Dynamic list of Goods\n      </h1>\n      <div className=\"\">\n        <Button\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => loadGoods(getAll)}\n        >\n          Load all goods\n        </Button>\n\n        <Button\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => loadGoods(get5First)}\n        >\n          Load 5 first goods\n        </Button>\n\n        <Button\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => loadGoods(getRed)}\n        >\n          Load red goods\n        </Button>\n      </div>\n\n      <div className=\"content is-large card\">\n        {!hasLoadingError && <GoodsList goods={viewGoods} />}\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}